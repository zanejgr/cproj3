======================================================
||	GLOBAL CONSTANTS                            ||
======================================================
------------------------------------------------------
|	oufs.h: prof's code (final, don't touch)     |
------------------------------------------------------

UNALLOCATED_INODE (USHRT_MAX-1)
UNALLOCATED_BLOCK USHRT_MAX
N_INODE_BLOCKS 8
ROOT_DIRECTORY_BLOCK (N_INODE_BLOCKS + 1)
FILE_NAME_SIZE (16 - sizeof(INODE_REFERENCE))
BLOCKS_PER_INODE (16-1)
IT_NONE 'N'
IT_DIRECTORY 'D'
IT_FILE 'F'
INODES_PER_BLOCK (BLOCK_SIZE/sizeof(INODE))
N_INODES (INODES_PER_BLOCK * N_INODE_BLOCKS)
MASTER_BLOCK_REFERENCE 0
DIRECTORY_ENTRIES_PER_BLOCK (BLOCK_SIZE / sizeof(DIRECTORY_ENTRY))

--------------------------------------------------
|oufs_lib.h : prof's code (changable)		|
-------------------------------------------------
MAX_PATH_LENGTH 200
---------------------------------------------------------
|	vdisk.h: senpai's code (probably don't touch	|
---------------------------------------------------------
BLOCK_SIZE 256
N_BLOCKS_IN_DISK 128

==================================================
||	TYPES                                    |
==================================================
--------------------------------------------------
|	oufs.h: prof's code (final, don't touch) |
--------------------------------------------------
unsigned short INODE_REFERENCE;
struct data_block_s 	DATA_BLOCK;
+ unsigned char data[BLOCK_SIZE];

struct inode_s  INODE
+ char type;
+ unsigned char n_references;
+ BLOCK_REFERENCE data[BLOCKS_PER_INODE];
+ unsigned int size;

struct inode_block_s INODE_BLOCK;
+ INODE inode[INODES_PER_BLOCK];

struct master_block_s MASTER_BLOCK
+ unsigned char inode_allocated_flag[N_INODES >> 3];
+ unsigned char block_allocated_flag[N_BLOCKS_IN_DISK >> 3];

struct directory_entry_s DIRECTORY_ENTRY;
+ char name[FILE_NAME_SIZE];
+ INODE_REFERENCE inode_reference;

struct directory_block_s DIRECTORY_BLOCK;
+ DIRECTORY_ENTRY entry[DIRECTORY_ENTRIES_PER_BLOCK];

struct oufile_s OUFILE;
+ INODE_REFERENCE inode_reference;
+ char mode;
+ int offset;

union block_u BLOCK;
+ DATA_BLOCK data;
+ MASTER_BLOCK master;
+ INODE_BLOCK inodes;
+ DIRECTORY_BLOCK directory;
---------------------------------------------------------
|	vdisk.h: senpai's code (probably don't touch	|
---------------------------------------------------------
unsigned short BLOCK_REFERENCE
